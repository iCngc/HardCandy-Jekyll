<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.1">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2019-01-14T00:24:38+08:00</updated><id>http://localhost:4000/</id><title type="html">进击的数据</title><subtitle>我的大数据学习笔记</subtitle><author><name>true</name></author><entry><title type="html">数据结构与算法</title><link href="http://localhost:4000/2019/01/13/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E7%9A%84%E5%89%AF%E6%9C%AC.html" rel="alternate" type="text/html" title="数据结构与算法" /><published>2019-01-13T00:00:00+08:00</published><updated>2019-01-13T00:00:00+08:00</updated><id>http://localhost:4000/2019/01/13/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E7%9A%84%E5%89%AF%E6%9C%AC</id><content type="html" xml:base="http://localhost:4000/2019/01/13/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E7%9A%84%E5%89%AF%E6%9C%AC.html">&lt;h1 id=&quot;数据结构与算法&quot;&gt;数据结构与算法&lt;/h1&gt;

&lt;h2 id=&quot;一如何抓住重点系统高效的学习数据结构与算法&quot;&gt;一、如何抓住重点,系统高效的学习数据结构与算法&lt;/h2&gt;

&lt;h3 id=&quot;是什么&quot;&gt;是什么?&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;数据机构:&lt;/strong&gt;指的是一组数据的存储结构&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;算法:&lt;/strong&gt;指的是操作数据的一组方法&lt;/p&gt;

&lt;h3 id=&quot;学什么&quot;&gt;学什么?&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;复杂度分析&lt;/strong&gt;—效率和资源消耗的度量衡&lt;/li&gt;
  &lt;li&gt;最常用的、最基础的20个数据机构与算法
    &lt;ol&gt;
      &lt;li&gt;&lt;strong&gt;数据结构&lt;/strong&gt;: 数组、链表、栈、队列、散列表、二叉树、堆、跳表、图、Tire数&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;算法&lt;/strong&gt;: 递归、排序、二分查找、搜索、哈希算法、贪心算法、分治算法、回溯算法、动态规划、字符串匹配算法&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;怎么学&quot;&gt;怎么学?&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;边学边练,每周花1~2小时集中攻关三节课涉及的数据结构和算法,全部写出来&lt;/li&gt;
  &lt;li&gt;所有数据结构与算法用Python实现一遍&lt;/li&gt;
  &lt;li&gt;所有数据结构与算法用Java实现一遍&lt;/li&gt;
  &lt;li&gt;每篇文章做笔记&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;复杂度分析上如何分析统计算法的执行效率和资源消耗&quot;&gt;复杂度分析(上):如何分析、统计算法的执行效率和资源消耗&lt;/h2&gt;

&lt;h3 id=&quot;什么是复杂度分析&quot;&gt;什么是复杂度分析?&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;数据结构和算法解决的是“如何让计算机更快时间、更省空间的解决问题”&lt;/li&gt;
  &lt;li&gt;从执行时间和占用空间两个维度评估数据结构和算法的性能&lt;/li&gt;
  &lt;li&gt;分别用时间复杂度和空间复杂度两个概念来描述性能问题,二者统称为复杂度&lt;/li&gt;
  &lt;li&gt;复杂度描述的是算法执行时间(或占用空间)与数据规模的关系&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;为什么要进行复杂度分析&quot;&gt;为什么要进行复杂度分析?&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;和性能测试相比,复杂度分析有不依赖执行环境、成本低、效率高、易操作、指导性强的特点&lt;/li&gt;
  &lt;li&gt;掌握复杂度分析,将能编写出性能更优的代码,有利于降低系统开发和维护成本&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;如何进行复杂度分析&quot;&gt;如何进行复杂度分析?&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;大O表示法&lt;/strong&gt;:
    &lt;ul&gt;
      &lt;li&gt;来源: 算法的执行时间与每行代码的执行次数成正比,用T(n) = O(f(n))表示,其中T(n)表示算法执行总时间,f(n)表示每行代码执行总次数,而n往往表示数据的规模&lt;/li&gt;
      &lt;li&gt;特点: 以时间复杂度为例,由于时间复杂度描述的是算法执行时间与数据规模的增长变化趋势,所以常量阶、低阶以及系数实际上对这种增场趋势不产生决定醒影响,所以在做时间复杂度分析时忽略这些项.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;时间复杂度(渐进时间复杂度)&lt;/strong&gt;:代码执行时间随数据规模增长的变化趋势&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;空间复杂度(渐进空间复杂度)&lt;/strong&gt;:算法的存储空间与数据规模之间的增长关系&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;时间复杂度分析法则&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;单段代码看高频&lt;/strong&gt;: 比如循环&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;多段代码取最大&lt;/strong&gt;: 比如一段代码中有单循环和多重循环,那么取多重循环的复杂度&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;嵌套代码求乘积&lt;/strong&gt;: 比如递归、多重循环等&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;多个规模求加法&lt;/strong&gt;: 比如方法有两个参数控制两个循环的次数,那么这时就取二者复杂度相加&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;常用的复杂度级别&quot;&gt;常用的复杂度级别&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;多项式阶&lt;/strong&gt;: 随着数据规模的增长,算法的执行时间和空间占用,按照多项式的比例增长.&lt;/p&gt;

&lt;p&gt;包括: O(1)(常数阶)、O(logn)(对数阶)、O(n)(线性阶)、O(nlogn)(线性对数阶)、O(n^2)(平方阶)、(n^3)(立方阶)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;非多项式阶&lt;/strong&gt; :随着数据规模的增长,算法的执行时间和空间占用暴增,这类算法性能极差.&lt;/p&gt;

&lt;p&gt;包括: O(2^n)(指数阶)、O(n!)(阶乘阶)&lt;/p&gt;</content><author><name>进击的数据</name></author><category term="数据结构" /><category term="算法" /><summary type="html">数据结构与算法</summary></entry></feed>